{
    "version": "https://jsonfeed.org/version/1",
    "title": "Jan Biernacki Personal Portfolio",
    "home_page_url": "http://localhost:4000/",
    "feed_url": "http://localhost:4000/feed.json",
    "description": "I am a 22 year old Software Developer from Germany, mostly working with Flutter. Feel free to check out my projects! <a href=\"https://github.com/100xA\" target=\"_blank\" rel=\"noopener\">@github</a>.",
    "icon": "http://localhost:4000/apple-touch-icon.png",
    "favicon": "http://localhost:4000/favicon.ico",
    "expired": false,
    
"items": [
    
        {
            "id": "http://localhost:4000/2024/10/05/project-approx/",
            "title": "Introduction Project \"Approx\"",
            "summary": "Building an AI-Powered PDF to Obsidian Assistant",
            "content_text": "Building an AI-Powered PDF to Obsidian AssistantThe “Aha” MomentLast week, I found myself drowning in PDFs. Again. :(Between research papers, documentation, and various digital books, I had accumulated a small library of PDFs that needed to be integrated into my Obsidian vault. As I manually copied, pasted, and formatted the twentieth document of the day, I had that classic developer thought: “There has to be a better way.”There is none, so I need to build one.What is Obsidian?Obsidian is a powerful knowledge management tool that allows users to create a personal knowledge base using markdown files. It enables users to link notes together, creating a network of interconnected ideas, which enhances the way information is organized and retrieved. This project aims to leverage Obsidian’s capabilities by automating the integration of PDF content into the vault, ensuring that the structure and connections within the knowledge base are preserved and enriched.The ProblemIf you’re like me, your Obsidian vault is more than just a collection of notes—it’s a carefully curated digital garden. Each note has its place, its connections, its tags, and its role in the greater knowledge graph. Simply dumping PDF content into it would be like throwing random plants into a well-maintained garden. The structure matters.Here are my requirements:  Preserve my existing vault structure  Maintain the integrity of my knowledge graph  Generate meaningful connections to existing notes  Keep my tagging system consistent  Save me time (obviously!)  Seemlessly integrate into Obsidian (no copy pasting action)The Solution: Meet the Obsidian PDF AgentA rough overview (for now)How It WorksImagine having a really smart research assistant who:  Reads and understands your PDFs  Knows how you organize your notes  Creates perfectly formatted markdown files  Places them in the right folders  Suggests relevant connections to your existing notes  Maintains your tagging systemThat’s essentially what this agent will do, but automatically. By that we have builtReal-World ExampleHere’s what happened when I fed it a research paper about cognitive biases:Before:research_paper_123.pdf└── 50 pages of dense academic text / uni scriptsAfter:---title: \"Understanding Cognitive Biases in Decision Making\"source: \"Journal of Behavioral Economics, 2024\"tags: [psychology, decision-making, cognitive-bias]related: [[Decision Making Framework]], [[Behavioral Economics]]---## Key Findings- Discovery of three new cognitive biases- Impact on financial decision making- Potential mitigation strategies[... rest of the intelligently formatted content ...]![Specifically Integrated Link to another node]Final NotesI will be back soon with updates. I am mostly new to this field, so mistakes (learning opportunities) will happen. I will be posting weekly on my progress. Thank you for reading &lt;3.Links  Approx Repo",
            "content_html": "<h1 id=\"building-an-ai-powered-pdf-to-obsidian-assistant\">Building an AI-Powered PDF to Obsidian Assistant</h1><h2 id=\"the-aha-moment\">The “Aha” Moment</h2><p>Last week, I found myself drowning in PDFs. Again. :(</p><p>Between research papers, documentation, and various digital books, I had accumulated a small library of PDFs that needed to be integrated into my Obsidian vault. As I manually copied, pasted, and formatted the twentieth document of the day, I had that classic developer thought: “There has to be a better way.”</p><p>There is none, so I need to build one.</p><h2 id=\"what-is-obsidian\">What is Obsidian?</h2><p>Obsidian is a powerful knowledge management tool that allows users to create a personal knowledge base using markdown files. It enables users to link notes together, creating a network of interconnected ideas, which enhances the way information is organized and retrieved. This project aims to leverage Obsidian’s capabilities by automating the integration of PDF content into the vault, ensuring that the structure and connections within the knowledge base are preserved and enriched.</p><h2 id=\"the-problem\">The Problem</h2><p>If you’re like me, your Obsidian vault is more than just a collection of notes—it’s a carefully curated digital garden. Each note has its place, its connections, its tags, and its role in the greater knowledge graph. Simply dumping PDF content into it would be like throwing random plants into a well-maintained garden. The structure matters.</p><p><strong>Here are my requirements:</strong></p><ol>  <li>Preserve my existing vault structure</li>  <li>Maintain the integrity of my knowledge graph</li>  <li>Generate meaningful connections to existing notes</li>  <li>Keep my tagging system consistent</li>  <li>Save me time (obviously!)</li>  <li>Seemlessly integrate into Obsidian (no copy pasting action)</li></ol><h2 id=\"the-solution-meet-the-obsidian-pdf-agent\">The Solution: Meet the Obsidian PDF Agent</h2><p>A rough overview (for now)</p><p><img src=\"/assets/images/blog/mermaid-diagram.png\" alt=\"Mermaid Diagramm for Approx\" /></p><h3 id=\"how-it-works\">How It Works</h3><p>Imagine having a really smart research assistant who:</p><ul>  <li>Reads and understands your PDFs</li>  <li>Knows how you organize your notes</li>  <li>Creates perfectly formatted markdown files</li>  <li>Places them in the right folders</li>  <li>Suggests relevant connections to your existing notes</li>  <li>Maintains your tagging system</li></ul><p>That’s essentially what this agent will do, but automatically. By that we have built</p><h2 id=\"real-world-example\">Real-World Example</h2><p>Here’s what happened when I fed it a research paper about cognitive biases:</p><p>Before:</p><pre><code>research_paper_123.pdf└── 50 pages of dense academic text / uni scripts</code></pre><p>After:</p><pre><code class=\"language-markdown\">---title: \"Understanding Cognitive Biases in Decision Making\"source: \"Journal of Behavioral Economics, 2024\"tags: [psychology, decision-making, cognitive-bias]related: [[Decision Making Framework]], [[Behavioral Economics]]---## Key Findings- Discovery of three new cognitive biases- Impact on financial decision making- Potential mitigation strategies[... rest of the intelligently formatted content ...]![Specifically Integrated Link to another node]</code></pre><h2 id=\"final-notes\">Final Notes</h2><p>I will be back soon with updates. I am mostly new to this field, so mistakes (learning opportunities) will happen. I will be posting weekly on my progress. Thank you for reading &lt;3.</p><h1 id=\"links\">Links</h1><ul>  <li><a href=\"https://github.com/100xA/approx\">Approx Repo</a></li></ul>",
            "url": "http://localhost:4000/2024/10/05/project-approx/",
            
            
            
            "tags": ["python","ml","obsidian"],
            
            "date_published": "2024-10-05T00:00:00+02:00",
            "date_modified": "2024-10-05T00:00:00+02:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "http://localhost:4000/2024/03/18/blog-devin-ai/",
            "title": "Devin and the AI economy",
            "summary": null,
            "content_text": "So whats with this AI thing? Is it gonna replace my job as a software developer soon, or am I doomed to do this myself for a long time?With the emergence of Devin from Cognition Labs, those questions seem to be more and more pressing.As technical staff we often develop a different viewpoint on things, especially if it directly matters to us. This short essay is meant to explore the possibilities and shortcomings of “AIs” and technologies surrounding it from the perspective of a engineer, but for non-technical professionals. Often times those are the people who enact real managerial change, which is why it is so important to accurately inform them on the current technical trends, without relying too much on the hype. So what are those AIs anyways?When we hear terms like AI and Machine Learning, we often get confused. GPT-3, DALL-E and Claude 2 are all generative AI models, meaning that they take raw data - say, all of Wikipedia or the collected works of Goethe - and “learn” to generate statistical probable outputs.  Generative models have been used for years prior in statistics to analyze numerical data. The rise of deep learning, however, made it possible to extend those capabilities to images, speech and other complex data types.  So no, in the current iteration, Generative AI cannot develop new capabilities beyond its reach or rather learned capabilities. While it can synthesize knowledge, and f.e write a paragraph of song lyrics in the style of Goethe, it only can mimic those styles and influences and not create its own. Why Devin?A few days ago, Devin got announced. With Cognition Labs slogan of building the first “AI Software Engineer” plenty of VCs got excited, and many developers got scared. Devin can already pass Upwork Requests (which are usually reserved for Freelancers), it has an editor window where it can edit code, it has a browser window where it can interact with websites like GitHub, and it can read and make use of some documentation. The main thing seems to be the dedicated planning window and how it approaches tasks given in form.of prompts. There is some legitimate question about just how cherry-picked these examples are, but there is not anything about what it does that seems infeasible. But it is not a real AI software engineer, its more another tool for us. Well why is that?  This is because employing software engineers (most of the times) means creating business value. The job of a software engineering team is generally to take those high-level business requirements from the non-programming business folks, turn those things into a product or service that can then be used by customers. Even if Devin would write perfect code, he still is not a software engineer, and is not inteded to work with non-programmers to create value for customers. What can Devin actually do?Even if we now know, that conceptually, LLMs in our understanding will never fully replace software engineers, we still need to watch what LLMs can do, and how far they have already come.Looking at those graphs, Devin seems to be a major improvement to other LLMs.  But what do those figures actually mean? The SWE-Bench provides test queries from real world code issues (posted and resolved on Github) and tries to resolve them with the help of current models. The human score is in contrast 100 percent, because all of the problems are already solved. The “correctness” of the generated patches is assessed based on how well they pass the corresponding unit test.The test results are divided into two categories: assisted and unassisted. So what are those questions like? Lets look at some examples in the given json:Latex parsing of fractions yields wrong expression due to missing bracketsProblematic latex expression: \"\\\\frac{\\\\frac{a^3+b}{c}}{\\\\frac{1}{c^2}}\"is parsed to: ((a**3 + b)/c)/1/(c**2).Expected is: ((a**3 + b)/c)/(1/(c**2)).The missing brackets in the denominator result in a wrong expression.The issue can be found here. The following:&gt;&gt;&gt; n = Symbol('n', integer=True, even=True)&gt;&gt;&gt; (n**2/2).is_evenshould return True, but it returns None (of course, this is also an enhancement).That makes me think that perhaps symbolic integers should keep a more complex \"assumptions\" method, which generalizes \"is_even\" and \"is_odd\" to instead contain a dictionary of primes that are known to divide that integer, mapping to minimum and maximum known multiplicity.I would like to think about it and post a proposition/plan, but I am not sure what is the correct github way of doing this.The issue can be found here. Even without having prior knowledge in the tech stack used, we can clearly see that the shown issues boil down into relatively simple failed/incomplete instructions to the code. Issues like that are usually not breaking, and can be resolved within a few minutes/hours, depending on the skill.So how many of those issues can the state of the art models train?  Looking at the current output, Claude 2 seems to be peaking at 4.8 %. This does not seem to be that threathening as one might assume, and I do not think that we should throw out software engineers for those kind of results.But there is one more thing. This is the “assisted” category. The tested systems get provided the list of files that were modified for that particular Issue. While human engineers often need to look up which files are contributing to the issue and then resolve said problem, this is not the case here at all. So what are the “unassisted” numbers?  This looks pretty bleak for now. We see that most models currently cannot surpassed the one percent mark. So with Devin (which is trained on the same dataset), why did the numbers skyrocket?I cannot know for sure, but remember that they are plenty of factors and tactics to artificially mark up the percentages provided:      We currently do not know on which data subset the data was trained on.        The best yield achieved is probably the one shown.        Other models presented do not have the mentioned environment (cli, reusability of code fragments etc.) available, which is probably why the results are so different.   The goal here is not to have the most correct assessment of technical prowess, but to cater to VCs and sell the product - which is totally understandable. But maybe you are still not convinced, because you have seen headlines similar to that one?  Seems scary, right? Did we make so much progress in one year? Was Claude not able to resolve algebra, but now we have truly build a near perfect AI?  Oh wow, the numbers seem to be exponentially higher than before? Why is that?First of all, the test environment uses a different benchmark, including HumanEval. Using their dataset, we can extract the questions used for the test. You are given a non-empty list of positive integers. Return the greatest integer that is greater than    zero, and has a frequency greater than or equal to the value of the integer itself.    The frequency of an integer is the number of times it appears in the list.    If no such a value exist, return -1.    Examples:        search([4, 1, 2, 2, 3, 1]) == 2        search([1, 2, 2, 3, 3, 3, 4, 4, 4]) == 3        search([5, 5, 4, 4, 4]) == -1 If you want to see the output for yourself, you can use the terminal and search the question for yourself curl -L -q -s https://github.com/openai/human-eval/raw/master/data/HumanEval.jsonl.gz | gzip -cd |\\ jq -sr '([ .[].test | length ] | max) as $m | map(select (.test | length == $m))[0] | \"\\n\\(.task_id)\\n \\(.prompt)\"'. For everybody who has some basic experience of coding at all, this question seems rather lacking in itself. It could be used in technical interview to scrape the basic understanding of a graduate CS student without any online help. This question does not hold any real value in production environments, and is specifically designed to be understood by LLMs, because of its innate simplicity and trainability. If you do not believe me, you can try it out yourself. The other examples in itself meet the same threshold of complexity. It is not surprising, that the models tested on that benchmark thus achieve such high scores. So is it all just hype?No. But it should be regarded as a bubble. And like every bubble, it will burst at some point. LLMs are extremely valuable for future software engineers and technical staff as a tool to automate things and be more productive. It is not going to replace us in the near future when it comes to solving coding problems though, and I do not think it will ever replace the term “software engineer” conceptually. What is important though is to get aquainted in those tools and look for possibilities on how to efficiently use “AI” to leverage your value as a professional. For non-technical people it is more important than ever to listen to technical professional on what to expect in the current changes, and how to adapt, without buying to much into the hype that is circulating social media. If you as a new programmer think that writing code is the main part of your job or should be the focus on what you do - be ready for big changes and extend your skills into other areas of software engineering. Nonetheless - be critical, adapt to a new upcoming environment and do not forget to be relaxed - Devin is not gonna take your job tomorrow. :D",
            "content_html": "<p><strong>So whats with this AI thing? Is it gonna replace my job as a software developer soon, or am I doomed to do this myself for a long time?</strong><br /><br />With the emergence of <a href=\"https://www.cognition-labs.com/introducing-devin\">Devin from Cognition Labs</a>, those questions seem to be more and more pressing.As technical staff we often develop a different viewpoint on things, especially if it directly matters to us. <br /><br />This short essay is meant to explore the possibilities and shortcomings of “AIs” and technologies surrounding it from the perspective of a engineer, but for non-technical professionals. <br /><br />Often times those are the people who enact real managerial change, which is why it is so important to accurately inform them on the current technical trends, without relying too much on the hype.</p><p><br /> <br /></p><h2 id=\"so-what-are-those-ais-anyways\">So what are those AIs anyways?</h2><p>When we hear terms like AI and Machine Learning, we often get confused. GPT-3, DALL-E and Claude 2 are all generative AI models, meaning that they take raw data - say, all of Wikipedia or the collected works of Goethe - and “learn” to generate statistical probable outputs. <br /> <br /></p><p>Generative models have been used for years prior in statistics to analyze numerical data. The rise of deep learning, however, made it possible to extend those capabilities to images, speech and other complex data types. <br /> <br /></p><p>So no, in the current iteration, Generative AI cannot develop new capabilities beyond its reach or rather learned capabilities. While it can synthesize knowledge, and f.e write a paragraph of song lyrics in the style of Goethe, it only can mimic those styles and influences and not create its own.</p><p><br /> <br /></p><h2 id=\"why-devin\">Why Devin?</h2><p>A few days ago, Devin got announced. With Cognition Labs slogan of building the first “AI Software Engineer” plenty of VCs got excited, and many developers got scared. <br /><br /></p><p>Devin can already pass Upwork Requests (which are usually reserved for Freelancers), it has an editor window where it can edit code, it has a browser window where it can interact with websites like GitHub, and it can read and make use of some documentation. The main thing seems to be the dedicated planning window and how it approaches tasks given in form.of prompts. <br /><br /></p><p>There is some legitimate question about just how cherry-picked these examples are, but there is not anything about what it does that seems infeasible. But it is not a real AI software engineer, its more another tool for us. Well why is that? <br /> <br /></p><p>This is because employing software engineers (most of the times) means creating business value. The job of a software engineering team is generally to take those high-level business requirements from the non-programming business folks, turn those things into a product or service that can then be used by customers.</p><p><br /> <br /></p><p>Even if Devin would write perfect code, he still is not a software engineer, and is not inteded to work with non-programmers to create value for customers.</p><p><br /> <br /></p><h2 id=\"what-can-devin-actually-do\">What can Devin actually do?</h2><p>Even if we now know, that conceptually, LLMs in our understanding will never fully replace software engineers, we still need to watch what LLMs can do, and how far they have already come.Looking at those graphs, Devin seems to be a major improvement to other LLMs.<br /> <br /></p><p><img src=\"/assets/images/blog/devin-test.jpeg\" alt=\"Real World Engineering Performance (SWE-bench)\" /><br /> <br /></p><p>But what do those figures actually mean?<br /> <br />The <a href=\"https://www.swebench.com/\">SWE-Bench</a> provides test queries from real world code issues (posted and resolved on Github) and tries to resolve them with the help of current models. The human score is in contrast 100 percent, because all of the problems are already solved. The “correctness” of the generated patches is assessed based on how well they pass the corresponding unit test.<br /><br />The test results are divided into two categories: assisted and unassisted. So what are those questions like?<br /> <br />Lets look at some examples in the given json:</p><pre><code class=\"language-python\">Latex parsing of fractions yields wrong expression due to missing bracketsProblematic latex expression: \"\\\\frac{\\\\frac{a^3+b}{c}}{\\\\frac{1}{c^2}}\"is parsed to: ((a**3 + b)/c)/1/(c**2).Expected is: ((a**3 + b)/c)/(1/(c**2)).The missing brackets in the denominator result in a wrong expression.</code></pre><p>The issue can be found <a href=\"https://github.com/sympy/sympy/issues/8648\">here</a>.</p><p><br /> <br /></p><pre><code class=\"language-python\">The following:&gt;&gt;&gt; n = Symbol('n', integer=True, even=True)&gt;&gt;&gt; (n**2/2).is_evenshould return True, but it returns None (of course, this is also an enhancement).That makes me think that perhaps symbolic integers should keep a more complex \"assumptions\" method, which generalizes \"is_even\" and \"is_odd\" to instead contain a dictionary of primes that are known to divide that integer, mapping to minimum and maximum known multiplicity.I would like to think about it and post a proposition/plan, but I am not sure what is the correct github way of doing this.</code></pre><p>The issue can be found <a href=\"https://github.com/sympy/sympy/issues/21537\">here</a>.</p><p><br /> <br />Even without having prior knowledge in the tech stack used, we can clearly see that the shown issues boil down into relatively simple failed/incomplete instructions to the code. Issues like that are usually not breaking, and can be resolved within a few minutes/hours, depending on the skill.So how many of those issues can the state of the art models train?</p><p><br /> <br /><img src=\"/assets/images/blog/unassisted-models-swe.png\" alt=\"\" /></p><p><br /> <br /></p><p>Looking at the current output, Claude 2 seems to be peaking at 4.8 %. This does not seem to be that threathening as one might assume, and I do not think that we should throw out software engineers for those kind of results.But there is one more thing. This is the “assisted” category. The tested systems get provided the list of files that were modified for that particular Issue. While human engineers often need to look up which files are contributing to the issue and then resolve said problem, this is not the case here at all. So what are the “unassisted” numbers?</p><p><br /> <br /><img src=\"/assets/images/blog/assisted-models-swe.png\" alt=\"Alt text\" /></p><p><br /> <br />This looks pretty bleak for now. We see that most models currently cannot surpassed the one percent mark. So with Devin (which is trained on the same dataset), why did the numbers skyrocket?I cannot know for sure, but remember that they are plenty of factors and tactics to artificially mark up the percentages provided:</p><ul>  <li>    <p>We currently do not know on which data subset the data was trained on.</p>  </li>  <li>    <p>The best yield achieved is probably the one shown.</p>  </li>  <li>    <p>Other models presented do not have the mentioned environment (cli, reusability of code fragments etc.) available, which is probably why the results are so different.<br /> <br /></p>  </li></ul><p>The goal here is not to have the most correct assessment of technical prowess, but to cater to VCs and sell the product - which is totally understandable.<br /> <br /><strong>But maybe you are still not convinced, because you have seen headlines similar to <a href=\"https://arstechnica.com/information-technology/2024/03/the-ai-wars-heat-up-with-claude-3-claimed-to-have-near-human-abilities/\">that</a> one?</strong><br /> <br /><img src=\"/assets/images/blog/near-human-headline.png\" alt=\"Alt text\" /><br /> <br />Seems scary, right? Did we make so much progress in one year? Was Claude not able to resolve algebra, but now we have truly build a near perfect AI?<br /> <br /><img src=\"/assets/images/blog/benchmark-claude-3.png\" alt=\"Alt text\" /><br /> <br />Oh wow, the numbers seem to be exponentially higher than before? Why is that?First of all, the test environment uses a different benchmark, including <a href=\"https://paperswithcode.com/dataset/humaneval\">HumanEval</a>. Using their dataset, we can extract the questions used for the test.<br /> <br /></p><pre><code class=\"language-python\">You are given a non-empty list of positive integers. Return the greatest integer that is greater than    zero, and has a frequency greater than or equal to the value of the integer itself.    The frequency of an integer is the number of times it appears in the list.    If no such a value exist, return -1.    Examples:        search([4, 1, 2, 2, 3, 1]) == 2        search([1, 2, 2, 3, 3, 3, 4, 4, 4]) == 3        search([5, 5, 4, 4, 4]) == -1</code></pre><p><br /> <br />If you want to see the output for yourself, you can use the terminal and search the question for yourself <code>curl -L -q -s https://github.com/openai/human-eval/raw/master/data/HumanEval.jsonl.gz | gzip -cd |\\ jq -sr '([ .[].test | length ] | max) as $m | map(select (.test | length == $m))[0] | \"\\n\\(.task_id)\\n \\(.prompt)\"'</code>.<br /> <br />For everybody who has some basic experience of coding at all, this question seems rather lacking in itself. It could be used in technical interview to scrape the basic understanding of a graduate CS student without any online help. This question does not hold any real value in production environments, and is specifically designed to be understood by LLMs, because of its innate simplicity and trainability.<br /> <br />If you do not believe me, you can try it out yourself. The other examples in itself meet the same threshold of complexity. It is not surprising, that the models tested on that benchmark thus achieve such high scores.<br /> <br /></p><h2 id=\"so-is-it-all-just-hype\">So is it all just hype?</h2><p>No. But it should be regarded as a bubble. And like every bubble, it will burst at some point. LLMs are extremely valuable for future software engineers and technical staff as a tool to automate things and be more productive. It is not going to replace us in the near future when it comes to solving coding problems though, and I do not think it will ever replace the term “software engineer” conceptually.<br /> <br />What is important though is to get aquainted in those tools and look for possibilities on how to efficiently use “AI” to leverage your value as a professional. For non-technical people it is more important than ever to listen to technical professional on what to expect in the current changes, and how to adapt, without buying to much into the hype that is circulating social media. If you as a new programmer think that writing code is the main part of your job or should be the focus on what you do - be ready for big changes and extend your skills into other areas of software engineering.</p><p><br /> <br /><strong>Nonetheless - be critical, adapt to a new upcoming environment and do not forget to be relaxed - Devin is not gonna take your job tomorrow. :D</strong></p>",
            "url": "http://localhost:4000/2024/03/18/blog-devin-ai/",
            
            
            
            "tags": ["ai","status-finished"],
            
            "date_published": "2024-03-18T00:00:00+01:00",
            "date_modified": "2024-03-18T00:00:00+01:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "http://localhost:4000/2023/03/22/project-pomodoro-tracker/",
            "title": "Project \"Pomodoro Tracker\"",
            "summary": "Notes on the Project \"PomodoroTracker\" - A very simplistic Pomodoro Tracker in your Z-Shell",
            "content_text": "General InfoI have been recently struggling with the amount of options of Pomodoro-Trackers that are out there. Incable of finding a simple Tracker that doesn’t include any special features I have set out to build an alternative myself.Technical SummaryThe Project essentially has two modes of operation:  pomoShort: a 25(work)/5(rest) min split  pomoLong: a 50(work)/10(rest) min splitBoth splits can be repeated as much as they can.InstallationZshThis project requires the Z-Shell to work. Get more info here.TimerThis project requires the timer project to work properly.Setup  Create / navigate towards your .zshrc file - nano ~\\.zshrc  Paste the script underneath your PATH variablesThat’s it! Now you have a quick Pomodoro-CLI for your productivity setupLinks and further information  Link to the repositoryI will be updating the project regarding my own needs while keeping it as lightweight as possible.Thanks for reading!",
            "content_html": "<p><img src=\"/assets/gifs/Pomo.gif\" alt=\"PomoCLI\" /></p><h1 id=\"general-info\">General Info</h1><p>I have been recently struggling with the amount of options of Pomodoro-Trackers that are out there. Incable of finding a simple Tracker that doesn’t include any special features I have set out to build an alternative myself.</p><h1 id=\"technical-summary\">Technical Summary</h1><p>The Project essentially has two modes of operation:</p><ul>  <li><strong>pomoShort:</strong> a 25(work)/5(rest) min split</li>  <li><strong>pomoLong:</strong> a 50(work)/10(rest) min split</li></ul><p>Both splits can be repeated as much as they can.</p><h2 id=\"installation\">Installation</h2><h3 id=\"zsh\">Zsh</h3><p>This project requires the Z-Shell to work. Get more info <a href=\"https://ohmyz.sh\">here</a>.</p><h3 id=\"timer\">Timer</h3><p>This project requires the <a href=\"https://github.com/caarlos0/timer\">timer</a> project to work properly.</p><h3 id=\"setup\">Setup</h3><ol>  <li>Create / navigate towards your .zshrc file - <code>nano ~\\.zshrc</code></li>  <li>Paste the script underneath your PATH variables</li></ol><p>That’s it! Now you have a quick Pomodoro-CLI for your productivity setup</p><h1 id=\"links-and-further-information\">Links and further information</h1><ul>  <li><a href=\"https://github.com/100xA/PomodoroTrackerCLI\">Link to the repository</a></li></ul><p>I will be updating the project regarding my own needs while keeping it as lightweight as possible.Thanks for reading!</p>",
            "url": "http://localhost:4000/2023/03/22/project-pomodoro-tracker/",
            
            
            
            "tags": ["zsh","zshrc","applescript","status-ongoing"],
            
            "date_published": "2023-03-22T00:00:00+01:00",
            "date_modified": "2023-03-22T00:00:00+01:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "http://localhost:4000/2023/01/05/project-integrationseminar/",
            "title": "Project \"Integrationsseminar\"",
            "summary": "Notes on the Project \"Integrationsseminar\" - A flutter project for the Seminar \"Digitale Assistenzsysteme für den technischen Service\"",
            "content_text": "General InfoThe Project “Integrationsseminar” is a flutter project for the seminar “Digitale Assistenzsysteme für den technischen Service”. Goal of the application is to build an environment for the employees of a paper company (Engineers, Managers, Admins) to manage production machines and their components.The documentation is written with the arc42-Template and is available on the repo.Technical SummaryReference projects  https://github.com/akshansh2000/learn_ar_flutterPackages  https://pub.dev/packages/firebase_core  https://pub.dev/packages/csv  https://pub.dev/packages/pdf  https://pub.dev/packages/firebase_databaseArchitecture  BLoC/Cubit: https://pub.dev/packages/flutter_bloc  Get_it : https://pub.dev/packages/get_itLinks and further information  Link to the repository",
            "content_html": "<h1 id=\"general-info\">General Info</h1><p>The Project “Integrationsseminar” is a flutter project for the seminar “Digitale Assistenzsysteme für den technischen Service”. Goal of the application is to build an environment for the employees of a paper company (Engineers, Managers, Admins) to manage production machines and their components.</p><p>The documentation is written with the arc42-Template and is available on the repo.</p><h1 id=\"technical-summary\">Technical Summary</h1><h3 id=\"reference-projects\">Reference projects</h3><ul>  <li>https://github.com/akshansh2000/learn_ar_flutter</li></ul><h3 id=\"packages\">Packages</h3><ul>  <li>https://pub.dev/packages/firebase_core</li>  <li>https://pub.dev/packages/csv</li>  <li>https://pub.dev/packages/pdf</li>  <li>https://pub.dev/packages/firebase_database</li></ul><h2 id=\"architecture\">Architecture</h2><ul>  <li>BLoC/Cubit: https://pub.dev/packages/flutter_bloc</li>  <li>Get_it : https://pub.dev/packages/get_it</li></ul><h1 id=\"links-and-further-information\">Links and further information</h1><ul>  <li><a href=\"https://github.com/100xA/integrationFlutterApp\">Link to the repository</a></li></ul>",
            "url": "http://localhost:4000/2023/01/05/project-integrationseminar/",
            
            
            
            "tags": ["java.dart","flutter","firebase","status-open"],
            
            "date_published": "2023-01-05T00:00:00+01:00",
            "date_modified": "2023-01-05T00:00:00+01:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "http://localhost:4000/2021/03/01/project-zample-workbook/",
            "title": "Project \"Zample Workbook Part 1\"",
            "summary": "Notes on the Project \"Zample\" - a Cross-Plattform Application for centrally distributing ideas and their respective creators.",
            "content_text": "General InfoThis is an updated version of Project Zample. Since Zample’s code was outdated, I have updated it to the non-null standard provided by Flutter.The project workbook was written for NexLiber.com.Technical SummaryThis is part one of a probably three-part series, meaning that this project only encompasses:  General Setup (Seperation of BL, UI and Repo, project structure)  Firebase Setup  Firebase Auth (Google Auth)The projects follows the same technical guidelines/processes as Project Zample.Links and further informationI have added the full workbook documentation to the ReadMe-File on Github. Feel free to check it out!  Link to the repository  Link to the workbook on Nextliber.com - only accessible if you are signed inThe project is completed.",
            "content_html": "<h1 id=\"general-info\">General Info</h1><p>This is an updated version of <a href=\"/2021/01/01/project-zample\">Project Zample</a>. Since Zample’s code was outdated, I have updated it to the non-null standard provided by Flutter.</p><p><img src=\"/assets/images/landing-page.png\" alt=\"Zample Design\" class=\"align-center\" /></p><p>The project workbook was written for <a href=\"https://nexliber.com\">NexLiber.com</a>.</p><h1 id=\"technical-summary\">Technical Summary</h1><p>This is part one of a probably three-part series, meaning that this project only encompasses:</p><ul>  <li>General Setup (Seperation of BL, UI and Repo, project structure)</li>  <li>Firebase Setup</li>  <li>Firebase Auth (Google Auth)</li></ul><p>The projects follows the same technical guidelines/processes as <a href=\"/2021/01/01/project-zample\">Project Zample</a>.</p><h1 id=\"links-and-further-information\">Links and further information</h1><p>I have added the full workbook documentation to the ReadMe-File on Github. Feel free to check it out!</p><ul>  <li><a href=\"https://github.com/100xA/zample_workbook\">Link to the repository</a></li>  <li><a href=\"https://nexliber.com/workbook/zample-part-1\">Link to the workbook on Nextliber.com</a> - only accessible if you are signed in</li></ul><p>The project is completed.</p>",
            "url": "http://localhost:4000/2021/03/01/project-zample-workbook/",
            
            
            
            "tags": ["java.dart","flutter","firebase","status-finished"],
            
            "date_published": "2021-03-01T00:00:00+01:00",
            "date_modified": "2021-03-01T00:00:00+01:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "http://localhost:4000/2021/01/01/project-zample/",
            "title": "Project \"Zample\"",
            "summary": "Notes on the Project \"Zample\" - a Cross-Plattform Application for centrally distributing ideas and their respective creators.",
            "content_text": "General InfoThe Application “Zample” is a Cross-Plattform Application for centrally distributing ideas and their respective creators.Since 2019, the program has been developed by myself and two other team-members, with the goal to ease the way how people share very early ideas and provide a fresh marketplace for them.Technical Summary“Zample” is written with the Flutter/Dart Cross-Plattform Framework created by Google.The Projects Database is maintained by Google Firebase.To have a clear and functioning seperation between UI, BL and Repository, the popular state management library BLoC/Cubit (Business Logic other Component) was chosen.Cubit, being an extension of the BLoC library, is often used to better organise the BL’s BlocBase.To ensure easy dependency injection, the package get_it was used. Services across the application can now be implemented/referenced/called from everywhere in the project.Project Structure├── lib│   ├── api│   ├── components│   │   ├── home│   │   │   ├── bloc│   │   │   │   └── cubit│   │   │   └── ui│   │   ├── landing│   │   │   ├── bloc│   │   │   │   └── cubit│   │   │   └── ui│   │   │       └── widgets│   │   ├── profile│   │   │   ├── bloc│   │   │   │   └── cubit│   │   │   ├── repo│   │   │   └── ui│   │   │       └── widgets│   │   └── settings│   ├── core│   │   ├── bloc│   │   │   ├── app│   │   │   ├── auth│   │   │   └── theme│   │   ├── error_handler│   │   ├── logger│   │   ├── repo│   │   ├── services│   │   └── widgets│   ├── main.dart│   ├── misc│   │   ├── routes│   │   └── theme└── testThe Project follows the principles of dividing UI/BL/Repository, while incorporating some aspects of the Clean Architecture-approach.  Api - Endpoints to every API that has been used  components - Main components of the application, divided into each functional part of the application, where every part has a own UI/BL/Repository for its service  core - overarching features of the application (authentication, logging etc.)  misc - miscellanous features (routing, themes/color schemes) of the application  test - folder for test for the application (not included in the project)Links and further information  Link to the repository  Link to the website on NotionThe project is no longer active.",
            "content_html": "<h1 id=\"general-info\">General Info</h1><p>The Application “Zample” is a Cross-Plattform Application for centrally distributing ideas and their respective creators.</p><p>Since 2019, the program has been developed by myself and two other team-members, with the goal to ease the way how people share very early ideas and provide a fresh marketplace for them.</p><p><img src=\"/assets/images/zample-design.png\" alt=\"Zample Design\" class=\"align-center\" /></p><h1 id=\"technical-summary\">Technical Summary</h1><p>“Zample” is written with the <strong>Flutter/Dart Cross-Plattform</strong> Framework created by Google.The Projects Database is maintained by <strong>Google Firebase</strong>.</p><p>To have a clear and functioning seperation between UI, BL and Repository, the popular state management library <strong>BLoC/Cubit (Business Logic other Component)</strong> was chosen.Cubit, being an extension of the BLoC library, is often used to better organise the BL’s <code>BlocBase</code>.</p><p><img src=\"/assets/images/bloc-cubit-arch.png\" alt=\"BLoC/Cubit\" /></p><p>To ensure easy dependency injection, the package <a href=\"https://pub.dev/packages/get_it\"><code>get_it</code></a> was used. Services across the application can now be implemented/referenced/called from everywhere in the project.</p><h2 id=\"project-structure\">Project Structure</h2><pre><code>├── lib│   ├── api│   ├── components│   │   ├── home│   │   │   ├── bloc│   │   │   │   └── cubit│   │   │   └── ui│   │   ├── landing│   │   │   ├── bloc│   │   │   │   └── cubit│   │   │   └── ui│   │   │       └── widgets│   │   ├── profile│   │   │   ├── bloc│   │   │   │   └── cubit│   │   │   ├── repo│   │   │   └── ui│   │   │       └── widgets│   │   └── settings│   ├── core│   │   ├── bloc│   │   │   ├── app│   │   │   ├── auth│   │   │   └── theme│   │   ├── error_handler│   │   ├── logger│   │   ├── repo│   │   ├── services│   │   └── widgets│   ├── main.dart│   ├── misc│   │   ├── routes│   │   └── theme└── test</code></pre><p>The Project follows the principles of dividing UI/BL/Repository, while incorporating some aspects of the <code>Clean Architecture</code>-approach.</p><ul>  <li><strong>Api</strong> - Endpoints to every API that has been used</li>  <li><strong>components</strong> - Main components of the application, divided into each functional part of the application, where every part has a own UI/BL/Repository for its service</li>  <li><strong>core</strong> - overarching features of the application (authentication, logging etc.)</li>  <li><strong>misc</strong> - miscellanous features (routing, themes/color schemes) of the application</li>  <li><strong>test</strong> - folder for test for the application (not included in the project)</li></ul><h1 id=\"links-and-further-information\">Links and further information</h1><ul>  <li><a href=\"https://github.com/100xA/Zample\">Link to the repository</a></li>  <li><a href=\"https://pstarterapp.de\">Link to the website on Notion</a></li></ul><p>The project is no longer active.</p>",
            "url": "http://localhost:4000/2021/01/01/project-zample/",
            
            
            
            "tags": ["java.dart","flutter","firebase","status-finished"],
            
            "date_published": "2021-01-01T00:00:00+01:00",
            "date_modified": "2021-01-01T00:00:00+01:00",
            
                "author": 
                ""
                
            
        }
    
    ]
}